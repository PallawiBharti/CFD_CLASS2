function [A,B]=matrixPB_DDC(a,n,Rat,Rac,Da,phi,Q,Le)
%%% Representation in the matrix form for the function M1(z)%%%
 neq=4;
[mdsq,mdu,mzu,mu]=TauDiffPB(n);
%% Temperature Base state  solution
mDT=(Q/6)*(3*(mzu/2+mu/2)^2-6*(mzu/2+mu/2)+2*mu)-mu;  %% Derivative of temperature

%% All constant coffecient 
c11 = -((1/12 * (sqrt(Da) - sqrt(Da) * exp(-1/sqrt(Da))) * (6 * Rac + (-6 + Q) * Rat) * sin(phi) - (sqrt(Da) + Da * (-1 + exp(-1/sqrt(Da)))) * (-(1/4) * Q * Rat * sin(phi) + 1/3 * (3 * Rac - 3 * Rat + Q * Rat) * sin(phi))));

c12 = (-4 * Da^(3/2) + Da * exp(-1/sqrt(Da)) + 2 * Da^(3/2) * exp(-1/sqrt(Da)) - Da * exp(1/sqrt(Da)) + 2 * Da^(3/2) * exp(1/sqrt(Da)));

C1=c11/c12;

c21 = -((exp(1/sqrt(Da)) * (-6 * Rac - 12 * sqrt(Da) * Rac - 6 * exp(1/sqrt(Da)) * Rac + 12 * sqrt(Da) * exp(1/sqrt(Da)) * Rac + 6 * Rat + 12 * sqrt(Da) * Rat + 6 * exp(1/sqrt(Da)) * Rat - 12 * sqrt(Da) * exp(1/sqrt(Da)) * Rat - sqrt(Da) * Q * Rat - exp(1/sqrt(Da)) * Q * Rat + sqrt(Da) * exp(1/sqrt(Da)) * Q * Rat) * sin(phi)));

c22 = (12 * sqrt(Da) * (-1 + exp(1/sqrt(Da))) * (-1 - 2 * sqrt(Da) - exp(1/sqrt(Da)) + 2 * sqrt(Da) * exp(1/sqrt(Da))));

C2=c21/c22;

c31 = -(-6 * Rac - 12 * sqrt(Da) * Rac - 6 * exp(1/sqrt(Da)) * Rac + 12 * sqrt(Da) * exp(1/sqrt(Da)) * Rac + 6 * Rat + 12 * sqrt(Da) * Rat + 6 * exp(1/sqrt(Da)) * Rat - 12 * sqrt(Da) * exp(1/sqrt(Da)) * Rat - Q * Rat - sqrt(Da) * Q * Rat - exp(1/sqrt(Da)) * Q * Rat + sqrt(Da) * exp(1/sqrt(Da)) * Q * Rat) * sin(phi);

c32 = 12 * (-1 - 2 * sqrt(Da) - exp(1/sqrt(Da)) + 2 * sqrt(Da) * exp(1/sqrt(Da)));

C3=c31/c32;

%%Base state velocity and theta

   uterm_1= (sqrt(Da))*(exp((1/sqrt(Da))*(mzu/2+mu/2)));
   uterm_2= (sqrt(Da))*(exp((-1/sqrt(Da))*(mzu/2+mu/2)));
   uterm_3= (1/3)*(3*Rac-3*Rat+Q*Rat)*(mzu/2+mu/2)*sin(phi);
   uterm_4= (-1/4)*Q*Rat*(mzu/2+mu/2)^2*sin(phi);
   up= C1*uterm_1 + C2*uterm_2 + C3*mu +(uterm_3 +uterm_4);
       
%%% Matrices of order n2 
mSwt=(4*mdsq -(a^2)*mu); %%% Matrix representation for (D^2-a^2)
mSwg=2*mdu;  %% Matrix representation of D

%%% Matrices in the order of n  %%%
MSW = mSwt(1:n,1:n); 
%MSWG=mSwg(1:n,1:n);
u = mu(1:n,1:n); 
DT = mDT(1:n,1:n);
%Ub=up(1:n,1:n);
s=zeros(n);

%% Matrix entries A and B  
A11 = MSW;
A12 = -u;
A13 = s;
A14 = s ;

A21 = s;
A22 = Da*MSW-u;
A23 = Rat*a^2*cos(phi)*u;
A24 = -Rac*a^2*cos(phi)*u;

A31 = -DT;
A32 = s;
A33 = MSW; 
A34 = Q*u;

A41=u;
A42=s;
A43=s;
A44= (1/Le)*MSW;


B11 = s;
B12 = s;
B13 = s;
B14 = s;

B21 = s;
B22 = s;
B23 = s;
B24 = s;

B31 = s;
B32 = s;
B33 = u;
B34 = s;

B41 = s;
B42= s;
B43= s;
B44 = u;


%%% Evaluate the Eigenvalue Problem Ax=sigma*Bx %%%
     %%% Formation of matrix 'A'
A=[A11 A12 A13 A14; A21 A22 A23 A24; A31 A32 A33 A34;A41 A42 A43 A44];
B=[B11 B12 B13 B14; B21 B22 B23 B24; B31 B32 B33 B34; B41 B42 B43 B44];
 %%% Formulation of boundary condition in the matrix form  
for p=1:neq
    A(p*n-1:p*n,:)=zeros(2,neq*n); 
    B(p*n-1:p*n,:)=zeros(2,neq*n);
end
for j=1:n
   
   A(n-1,j)=1; A(n,j)=(-1)^j; 
  
   A(2*n-1,n+j)=1; A(2*n,n+j)=(-1)^j;

   A(3*n-1,2*n+j)=1; A(3*n,2*n+j)=(-1)^j;
   
  A(4*n-1,3*n+j)=1; A(4*n,3*n+j)=(-1)^j;
   

end
end